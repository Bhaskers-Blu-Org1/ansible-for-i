# test negative test cases
- name: find objects with invalid age
  ibmi_object_find: 
    age: "*1*#"
  register: neg_result
  ignore_errors: true

- name: assert the returned objects with invalid age 
  assert:
    that:
      - "'failed to process age' in neg_result.msg"
          
- name: find objects with invalid age_stamp
  ibmi_object_find: 
    age_stamp: "atime"
  register: neg_result
  ignore_errors: true

- name: assert the returned objects with invalid age_stamp 
  assert:
    that:
      - "'value of age_stamp must be one of: ctime, got: atime' in neg_result.msg"

- name: find objects with invalid object_type_list
  ibmi_object_find: 
     object_type_list: "abcedfg"
  register: find_result
  ignore_errors: true

- name: assert failure result with invalid object_type_list  
  assert:
    that:
      - find_result.rc != 0
      - "'stdout' not in find_result"
      - "'stderr' in find_result"
      - "'stderr_lines' in find_result" 

- name: find objects with invalid lib_name 
  ibmi_object_find: 
    lib_name: "\\*ab***fe"
  register: neg_result
  ignore_errors: true

- name: assert failure result with invalid lib_name  
  assert:
    that:
      - neg_result.rc == 0
      - neg_result.object_list | length == 0

- name: find objects with invalid object_name 
  ibmi_object_find: 
    object_name: "''-+__"
  register: neg_result
  ignore_errors: true

- name: assert failure result with invalid object_name  
  assert:
    that:
      - neg_result.rc == 0
      - neg_result.object_list | length == 0 

- name: find objects with invalid size 
  ibmi_object_find: 
    size: "abcedge"
  register: neg_result
  ignore_errors: true

- name: assert failure result with invalid size  
  assert:
    that:
      - "'failed to process size' in neg_result.msg" 

- name: find objects with invalid iasp_name 
  ibmi_object_find: 
     iasp_name: "IASP1"
  register: neg_result
  failed_when: "'Exception when trying to use IASP.' not in neg_result.msg"

- name: find objects with invalid use_regex 
  ibmi_object_find: 
    use_regex: "abcd"
  register: neg_result
  ignore_errors: true

- name: assert failure result invalid use_regex  
  assert:
    that:
      - "'is not a valid boolean' in neg_result.msg"

- name: find objects with unsupported option 
  ibmi_object_find: 
    abc: "abcd"
  register: neg_result
  ignore_errors: true

- name: assert failure result with unsupported option 
  assert:
    that:
      - "'Unsupported parameters' in neg_result.msg"

- name: find objects with object_name with a *
  ibmi_object_find: 
    lib_name: "FINDLIB"
    object_name: "OBJECT*"
  register: find_result
  failed_when: "'ERROR: Input parameters are not valid.' not in find_result.stderr"

- name: use_regex can't work with that object_name is *ALL
  ibmi_object_find: 
    use_regex: true
  register: find_result
  failed_when: "'ERROR: Regular expression specified is not valid' not in find_result.stderr"

- block: 
    ## Setup - Create libraries and objects on test systems
    - copy: src="findobj.FILE" dest="/tmp/"

    - name: copy file to library
      command: 'mv /tmp/findobj.FILE /QSYS.LIB/QGPL.LIB/'

    - include: iasp.yml
    
    - name: create libraries 
      ibmi_cl_command: 
        cmd: "crtlib lib(findlib)"
    
    - name: restore object to library
      ibmi_cl_command: 
        cmd: "QSYS/RSTOBJ OBJ(*ALL) SAVLIB(FINDLIB) DEV(*SAVF) SAVF(QGPL/FINDOBJ)"
  

    # Run positive test cases
    - name: find library
      ibmi_object_find: 
        lib_name: "QSYS"
        object_name: "FINDLIB"
      register: find_result
  
    - name: assert the returned objects 
      assert:
        that:
          - find_result.rc == 0 
          - find_result.object_list | length == 1

    - name: find objects with object_type_list 
      ibmi_object_find: 
        object_type_list: "*PGM"
        object_name: "OBJECT1"
      register: find_result
  
    - name: assert the returned objects 
      assert:
        that:
          - find_result.rc == 0
          - find_result.start != ""
          - find_result.end != ""   
          - find_result.delta != ""
          - "'stdout' not in find_result"
          - "'stderr' not in find_result"
          - "'stdout_lines' not in find_result"
          - "'stderr_lines' not in find_result"  
          - find_result.object_list[0].OBJNAME is defined
          - find_result.object_list[0].OBJTYPE is defined
          - find_result.object_list[0].OBJOWNER is defined
          - find_result.object_list[0].TEXT is defined
          - find_result.object_list[0].OBJCREATED is defined
          - find_result.object_list[0].OBJDEFINER is defined
          - find_result.object_list[0].IASP_NUMBER is defined 
          - find_result.object_list[0].OBJLIB is defined
          - find_result.object_list[0].LAST_RESET_TIMESTAMP is defined
          - find_result.object_list[0].LAST_USED_TIMESTAMP is defined
          - find_result.object_list[0].OBJSIZE is defined
    
    - name: find objects with age=1s size=1k
      ibmi_object_find: 
        age: "1s"
        age_stamp: "ctime"
        object_type_list: "*ALL"
        lib_name: "FINDLIB"
        object_name: "*ALL"
        size: "1k"
        iasp_name: "*SYSBAS"
        use_regex: false
      register: find_result
  
    - name: assert the returned objects 
      assert:
        that:
          - find_result.rc == 0
          - find_result.start != ""
          - find_result.end != ""   
          - find_result.delta != ""
          - "'stdout' not in find_result"
          - "'stderr' not in find_result"
          - "'stdout_lines' not in find_result"
          - "'stderr_lines' not in find_result"  
          - find_result.object_list | length == 10
          - find_result.object_list[0].OBJNAME is defined
          - find_result.object_list[0].OBJTYPE is defined
          - find_result.object_list[0].OBJOWNER is defined
          - find_result.object_list[0].TEXT is defined
          - find_result.object_list[0].OBJCREATED is defined
          - find_result.object_list[0].OBJDEFINER is defined
          - find_result.object_list[0].IASP_NUMBER is defined 
          - find_result.object_list[0].OBJLIB is defined

    - name: find objects with size=0 
      ibmi_object_find: 
        size: "0"
      register: find_result
  
    - name: find objects with age=1s lib_name but without other options
      ibmi_object_find: 
        age: "1s"
        lib_name: "FINDLIB"
      register: find_result

    - name: assert the returned objects 
      assert:
        that:
          - find_result.object_list | length == 10

    - name: find objects with age=50w
      ibmi_object_find: 
        age: "50w"
        lib_name: "FINDLIB"
      register: find_result

    - name: assert the returned objects 
      assert:
        that:
          - find_result.object_list | length == 0

    - name: find objects with object_type_list lib_name
      ibmi_object_find: 
        object_type_list: "*PGM"
        lib_name: "FINDLIB"
        object_name: "OBJECT1"
      register: find_result
  
    - name: assert the returned objects 
      assert:
        that:
          - find_result.object_list | length == 1

    - name: find objects with multiple object_type_list
      ibmi_object_find: 
        object_type_list: "*PGM *JRN *FILE"
        lib_name: "FINDLIB"
        object_name: "OBJECT1"
      register: find_result

    - name: assert the returned objects 
      assert:
        that:
          - find_result.object_list | length == 2

    - name: find objects with multiple library_list
      ibmi_object_find: 
        object_type_list: "*PGM"
        lib_name: "FINDLIB FINDLIB1"
        object_name: "OBJECT1"
      register: find_result

    - name: assert the returned objects 
      assert:
        that:
          - find_result.object_list | length == 0 

    - name: find objects with size=80000b
      ibmi_object_find: 
        lib_name: "FINDLIB"
        size: "80000b"
      register: find_result

    - name: assert the returned objects 
      assert:
        that:
          - find_result.object_list | length == 3

    - name: find objects with use_regex
      ibmi_object_find: 
        object_type_list: "*ALL"
        lib_name: "FINDLIB"
        object_name: "OBJ?ECT2"
        use_regex: true
      register: find_result

    - name: assert the returned objects 
      assert:
        that:
          - find_result.object_list | length == 2

    - name: find objects with use_regex
      ibmi_object_find: 
        object_type_list: "*ALL"
        lib_name: "FINDLIB"
        object_name: "OBJC?ECT3"
        use_regex: true
      register: find_result

    - name: assert the returned objects 
      assert:
        that:
          - find_result.object_list | length == 1

  always:
    - name: delete library
      ibmi_cl_command: 
        cmd: dltlib lib(findlib)

    - name: delete savf
      ibmi_cl_command: 
        cmd: DLTOBJ OBJ(QGPL/FINDOBJ) OBJTYPE(*FILE)

 
