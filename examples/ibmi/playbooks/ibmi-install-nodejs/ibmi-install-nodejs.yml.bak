#ibmi-install-nodejs.yml 
#Refer to https://bitbucket.org/ibmi/opensource/src/master/docs/yum/ to get more details about IBM i opensource.  
---
- hosts: ibmi 
  gather_facts: no 

  vars:
    temp_dir: 
    products:
      1:
        ID: 5733C1
        option: *BASE
        installtion_file:
      2:
        ID: 5733C1
        option: 1
        installtion_file:         
      3: 
        ID: 5770SS1
        option: 33
        installtion_file:       
    sorted: "{{ products|dictsort(false, 'key')}}"

  tasks:

  - name: Create tempoaray directory if it doesn't exist
    file:  path="{{temp_dir}}/media" state=directory
    ignore_errors: True
    tags: download

  - name: Display installed software.
    ibmi_cl_command:
      cmd: DSPSFWRSC
    register: installed_software
    tags: download

  - name: Install required product
    block: 
      - name: Fail the playbook because no installation package of {{item.ID}} {{item.option}} which is not installed
        failed_when: 
          - {{item.installtion_file}} is NULL

      - name: Search the installation package on temporary directory
        find: paths="{{temp_dir}}" recurse=no
        register: files_in_temp_dir
      
      - name: Download the installation package from repository if it doesn't exist in the temporary directory
        synchronize:
          src: "{{ item.installtion_file }}"
          dest: "{{ temp_dir }}/"
        compress: yes
        checksum: yes
        delegate_to: repo 
        when: {{item.installtion_file}} not in files_in_temp_dir.stdout_lines
      
      - name: Accept the license agreement of the product
        ibmi_CL_command: 
          cmd: CALL PGM(QLPACAGR) PARM('{{item.ID}}' 'V9R1M4' '{{item.option}}=='*BASE'?'0000':''00'+{{item.option}}' '*')
        
      - name: Install the product  
        ibmi_CL_command: 
          cmd: RSTLICPGM LICPGM({{ item.ID }}) DEV(*SAVF) OPTION({{ item.option }}) SAVF(ANSIBLE/{{ item.SAVF }})  
        when: {{item.installation_file.split('.')[-1].upper()}} == 'SAVF'
    
    when: installed_software.stdout_lines is search("{{item.ID}}     {{item.option}}          5050"))
    with_item: {{sorted}}
        


  - debug: Check an installation package is provided if 5733SC1 *BASE is not installed
      msg: "5733SC1 *BASE installed"
    when: (installed_software.stdout_lines is search("5733SC1     *BASE          5050")) && {{product.1}} 
    tags: download

  - name: Download installation package of 5733SC1 *Base
      msg: "5733SC1 *BASE installed"
    when: installed_software.stdout_lines is search("5733SC1     *BASE          5050")

  - name: Check 5770SS1 Option 33 installed.
    raw: ls -l /QOpensys/pkgs/bin/yum