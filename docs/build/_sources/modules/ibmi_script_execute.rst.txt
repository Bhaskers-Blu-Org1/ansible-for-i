..
.. SPDX-License-Identifier: Apache-2.0
..

:github_url: https://github.com/LiJunBJZhu/i_collection_core/tree/master/plugins/modules/ibmi_script_execute.py


ibmi_script_execute -- Execute a cl/sql script file on a remote ibm i node.
===========================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

The ibmi_script_execute module execute a cl/sql script file on a remote ibm i node.

Only support cl/sql script file by now.

For sql script, use RUNSQLSTM to process

For non-cl/sql script, use the script plugin instead.






Parameters
----------

  src (True, path, None)
    Script file path on the remote ibm i node.

    The path can be absolute or relative.


  severity_level (optional, int, 10)
    When run sql script, specifies whether the processing is successful, based on the severity of the messages generated by the processing of the SQL statements.

    If errors that are greater than the value specified for this parameter occur during processing, no more statements are run and the statements are rolled back if they are running under commitmentcontrol.

    Only works for sql script


  type (True, str, None)
    Specify the script file type.

    Only support CL or SQL script by now.


  asp_group (optional, str, *SYSBAS)
    Specifies the name of the auxiliary storage pool (ASP) group to set for the current thread.

    The ASP group name is the name of the primary ASP device within the ASP group.


  parameters (optional, str,  )
    The parameters that RUNSQLSTM command will take. All other parameters need to be specified here.

    The default values of parameters for RUNSQLSTM will be taken if not specified.

    Only works for sql script





Notes
-----

.. note::
   - Ansible hosts file need to specify ansible_python_interpreter=/QOpenSys/pkgs/bin/python3(or python2)
   - For cl script, the command supports line breaks. When a command ends, add ':' at the end of each command or empty the next line. Otherwise program will not consider it is the end of a command.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Execute test.cl on a remote ibm i node
      ibmi_script_execute:
        src: '/home/test.cl'
        type: 'CL'

    - name: Execute testsql.sql on a remote ibm i node
      ibmi_script_execute:
        src: '/home/testsql.sql'
        type: 'SQL'
        severity_level: 40
        parameters: 'DATFMT(*USA)'



Return Values
-------------

  stderr_lines (always, list, ['Execute command %s failed.'])
    The standard error split in lines


  job_log (always, str, [{'TO_MODULE': 'PLUGILE', 'TO_PROGRAM': 'XMLSTOREDP', 'MESSAGE_TEXT': 'Command ended normally with exit status 0.', 'FROM_MODULE': 'QZSHRUNC', 'FROM_PROGRAM': 'QZSHRUNC', 'MESSAGE_TIMESTAMP': '2020-05-27-16.17.43.738571', 'FROM_USER': 'TESTER', 'TO_INSTRUCTION': '5829', 'MESSAGE_SECOND_LEVEL_TEXT': '', 'MESSAGE_TYPE': 'COMPLETION', 'MESSAGE_ID': 'QSH0005', 'MESSAGE_LIBRARY': 'QSHELL', 'FROM_LIBRARY': 'QSHELL', 'SEVERITY': '0', 'FROM_PROCEDURE': 'main', 'TO_LIBRARY': 'QXMLSERV', 'FROM_INSTRUCTION': '149', 'MESSAGE_SUBTYPE': '', 'ORDINAL_POSITION': '13', 'MESSAGE_FILE': 'QZSHMSGF', 'TO_PROCEDURE': 'ILECMDEXC'}])
    the job_log


  stderr (always, str, Execute command %s failed.)
    The standard error


  stdout (always, str, Successfully execute script file /home/test.cl)
    The standard output


  stdout_lines (always, list, ['Successfully execute script file /home/test.cl'])
    The standard output split in lines


  delta (always, str, 0:00:00.307534)
    The execution delta time.


  rc (always, int, 255)
    The action return code (0 means success, non-zero means failure)





Status
------




- This module is not guaranteed to have a backwards compatible interface. *[preview]*


- This module is maintained by community.



Authors
~~~~~~~

- Peng Zeng Yu (@pengzengyufish)

